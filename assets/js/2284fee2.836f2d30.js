"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6821],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return g}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=r.createContext({}),s=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,m=u(e,["components","mdxType","originalType","parentName"]),f=s(n),g=i,p=f["".concat(o,".").concat(g)]||f[g]||c[g]||l;return n?r.createElement(p,a(a({ref:t},m),{},{components:n})):r.createElement(p,a({ref:t},m))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,a=new Array(l);a[0]=f;var u={};for(var o in t)hasOwnProperty.call(t,o)&&(u[o]=t[o]);u.originalType=e,u.mdxType="string"==typeof e?e:i,a[1]=u;for(var s=2;s<l;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7185:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return o},metadata:function(){return s},assets:function(){return m},toc:function(){return c},default:function(){return g}});var r=n(7462),i=n(3366),l=(n(7294),n(3905)),a=["components"],u={},o=void 0,s={permalink:"/doc/blog/2021/11/22/Algorithm",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/blog/blog/2021-11-22-Algorithm.mdx",source:"@site/blog/2021-11-22-Algorithm.mdx",title:"Algorithm",description:"",date:"2021-11-22T00:00:00.000Z",formattedDate:"November 22, 2021",tags:[],readingTime:1.935,truncated:!1,authors:[],nextItem:{title:"Interview",permalink:"/doc/blog/2021/11/22/Interview"}},m={authorsImageUrls:[]},c=[],f={toc:c};function g(e){var t=e.components,n=(0,i.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="\u8282\u6d41"',title:'"\u8282\u6d41"'},"function throttle(fn, time = 300) {\n  // \u5148\u70b9\u51fb\u751f\u6548\n  let flag = false;\n  return function () {\n    if (flag) {\n      return;\n    }\n    flag = true;\n    setTimeout(() => {\n      fn.call(this, arguments);\n      flag = false;\n    }, time);\n  };\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="\u9632\u6296"',title:'"\u9632\u6296"'},"function debounce(fn, time = 300) {\n  // \u540e\u6267\u884c\n  let timer;\n  return function () {\n    timer && clearTimeout(timer);\n    timer = setTimeout(() => {\n      fn.call(this, arguments);\n    }, time);\n  };\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="\u6df1\u62f7\u8d1d"',title:'"\u6df1\u62f7\u8d1d"'},'function clone(target, map = new Map()) {\n  if (typeof target === "object") {\n    let obj = Array.isArray(target) ? [] : {};\n\n    if (map.get(target)) {\n      return map.get(target);\n    }\n\n    map.set(target, obj);\n\n    for (const key in target) {\n      obj[key] = clone(target[key], map);\n    }\n    return obj;\n  } else {\n    return target;\n  }\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="\u4e09\u6570\u4e4b\u548c"',title:'"\u4e09\u6570\u4e4b\u548c"'},"function threeSum(nums) {\n  nums = [-1, 0, 1, 2, -1, -4];\n  let res = [];\n  nums.sort((a, b) => a - b);\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] === nums[i - 1]) continue;\n\n    let left = i + 1;\n    let right = nums.length - 1;\n    let target = -nums[i];\n\n    while (left < right) {\n      if (nums[left] + nums[right] === target) {\n        res.push([nums[left], -target, nums[right]]);\n        while (nums[left] === nums[left + 1]) {\n          left++;\n        }\n        while (nums[right] === nums[right - 1]) {\n          right--;\n        }\n        left++;\n        right--;\n      } else if (nums[left] + nums[right] > target) {\n        right--;\n      } else {\n        left++;\n      }\n    }\n  }\n\n  return res;\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="\u4e09\u6570\u4e4b\u548c closest"',title:'"\u4e09\u6570\u4e4b\u548c','closest"':!0},"function threeSumClosest(nums, target) {\n  let res = 0;\n  let min = Number.MAX_VALUE;\n  nums.sort((a, b) => a - b);\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] === nums[i - 1]) continue;\n\n    let left = i + 1;\n    let right = nums.length - 1;\n    let current = nums[i];\n    let dist = 0;\n\n    while (left < right) {\n      let sum = nums[left] + nums[right] + current;\n      dist = Math.abs(sum - target);\n\n      if (dist === 0) {\n        return target;\n      } else if (sum > target) {\n        while (nums[right] === nums[right - 1]) {\n          right--;\n        }\n        right--;\n      } else {\n        while (nums[left] === nums[left + 1]) {\n          left++;\n        }\n        left++;\n      }\n\n      if (min > dist) {\n        min = dist;\n        res = sum;\n      }\n    }\n  }\n  return res;\n}\n")))}g.isMDXComponent=!0}}]);